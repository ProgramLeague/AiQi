初始化      YUAN.cpp          CYUANApp::CYUANApp()


屏幕显示    YUANView.cpp      void CYUANView::OnDraw(CDC* pDC)


主要运行    YUANView.cpp      void CYUANView::YUAN_RUN_MAIN()


主循环入口
定时器      YUANView.cpp      void CYUANView::OnTimer(UINT nIDEvent) 
            1号定时器处理代码      主要运行
            2号定时器处理代码      屏幕显示 
            3号定时器处理代码      状态栏显示




3个Ontest测试项目

AFX_IDI_STD_MDIFRAME 程序图标
IDR_MAINFRAME  窗口图标




定时器定义入口  YUANView.cpp    int CYUANView::OnCreate(LPCREATESTRUCT lpCreateStruct) 
 SetTimer(1,100,NULL);  //主要运行
 SetTimer(2,100,NULL);  //屏幕显示 
 SetTimer(3,300,NULL);  //状态栏显示
 SetTimer(4,500,NULL);  //运行注意
 SetTimer(5,2000,NULL);  //运行尝试
 SetTimer(6,3000,NULL);  //运行遗忘



================================================================
================================================================


//元的 临界值 和 疲劳值 判断来决定状态
   if(W >= tmp->threshold + tmp->fag)



//疲劳值变化

     if(tmp->state==1)
       {
         tmp->fag += fag_add + tmp->E/1000;

 
       }

     else if(tmp->state==0)
       {
         tmp->fag -= fag_minus;
         if(tmp->fag <= 0) tmp->fag=0;

       }





注意对象只能是0级以上的，0级忽视

(aE-bE)*WL

WL=0.6


//命令盒子---------------

印象元语言命令可以使用

构建语句  *x=a b c
模式语句  !a b c



//知识盒子---------------

建立新知识 以*开头的字符串，各个词用空格隔开  建立一个概念树 
统计字符串里的词组个数，以阀值60为标准 3/5通过法 ，设置连接的强度





//疲劳值变化---------------
tmp->fag += fag_add + tmp->E/1000;

根据层级不同，疲劳曾值fag_add也不同，层越高越大

初始化
fag_add=0.05

fag=fag_add/5 *n 


3层式信息元联想网络

字符层 0层     词语、符号等的输入
概念层 1层     记忆单元
方法层 2层     输出的格式化旋律、程序

-----------------------------------------

[理论实践原则]

[1]->同层不联系原则
字符与字符联系，必须通过中间生成的概念做中介，产生联系和影响。
这可以看作成是建立一种条件反射关系、前后因果关系、命题关系。并把这种关系具体保存为一种记忆储存形式。


[2]->选择处理概念层原则
机器思考过程中，只选择处理概念层那些表达强度高的单元，输入输出层单元，不被注意选择原则



-----------------------------------------

全面抑制 1层，带来的副作用就是抑制思维作用本身
全面抑制 0层，效果是保证输入的纯洁性，去除噪音


AI：我有这个概念，但不知道它叫什么名称？可以告诉我吗？
else if(Command_Flag==5)  //提问开启后的反馈
void CSayDlg::User_Answer_2( YUAN_UNIT *S_YUAN, CString text)



0层没有最活跃信息
1层有最活跃信息

0层有最活跃信息
1层没有最活跃信息




组合爆炸的问题  
重复输入1 2 3 是 a ，将诞生许多概念中介
如何判别已有的 概念中介？  重复输入强化吗？



如果字符一样怎么办？比如 输入1 1  2 3 4 4 4 这样的有相同字符重复的旋律
是不是需要底层连接函数支持？
暂不需要，可以生成区分1 1 2 3 和1 2 3的不同的概念

通过元的WAY?
概念层的元 有个WAY方法变量，记录0层输入的字符元的顺序字符串，用它可以区分不同的条件输入

有的条件输入强调顺序旋律作用，有的强调整体综合作用？


重复输入1 2 3 是 a ，避免组合爆炸后，是否拥有强化功能？





回答有2种情况 能不能统一？
不可以，用2个函数回答

-对元存储的字符串提问
-对于用户输入的字符串提问


int AI_Question_Kind=0; //电脑提问的类型 1对元存储的字符串提问    2对于用户输入的字符串提问


按回车的处理
else if(Command_Flag==5)  //处理电脑提问开启后，用户的反馈

反馈的不同效果



//用户回答  text1是text2
void CSayDlg::User_Answer_Text_Is( CString text1, CString text2)
{


}




什么时候开启？怎么开启？
电脑回答不知道的时候


